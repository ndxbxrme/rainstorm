{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "../src/",
  "sources": [
    "index.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\r\nexpress = require 'express'\r\nfs = require 'fs-extra'\r\nhttp = require 'http'\r\nglob = require 'glob'\r\npath = require 'path'\r\nogid = require 'ogid'\r\ncompression = require 'compression'\r\nbodyParser = require 'body-parser'\r\nhelmet = require 'helmet'\r\npug = require 'pug'\r\n\r\napp = express()\r\napps = {}\r\nbase = process.cwd()\r\nroot = ''\r\nserver = null\r\nsocket = null\r\nfetchTemplate = (templateName, appBase) ->\r\n  templatePath = path.join appBase, 'templates', templateName\r\n  if await fs.exists templatePath\r\n    return fs.readFile templatePath, 'utf8'\r\n  templatePath = path.join __dirname, '../templates', templateName\r\n  if await fs.exists templatePath\r\n    return fs.readFile templatePath, 'utf8'\r\n  return 'p missing template'\r\nmodule.exports = \r\n  apps: apps\r\n  app: (config) ->\r\n    config = config or {}\r\n    config.root = root or ''\r\n    config.base = base or ''\r\n    proxyFn = (method) ->\r\n      ->\r\n        url = config.root + arguments[0]\r\n        arguments[0] = url\r\n        app[method].apply app, arguments\r\n        @\r\n    pkg = require path.join config.base, 'package.json'\r\n    rainstorm = \r\n      name: pkg.name\r\n      static: express.static\r\n      database: (config.dbEngine or () ->) config\r\n      root: config.root\r\n      config: config\r\n      base: config.base\r\n      serverId: ogid 23\r\n      authenticate: (role) ->\r\n        (req, res, next) ->\r\n          return next() if req.user and not role\r\n          for r in role?\r\n            return next() if req.user.role?.includes r\r\n          res.status 200\r\n          .end 'unauthorized'\r\n      service: (fn) ->\r\n        fn rainstorm\r\n        @\r\n      subapp: (_root, _base) ->\r\n        root = _root\r\n        base = path.join process.cwd(), _base\r\n        require base\r\n        @\r\n    rainstorm.db = rainstorm.database\r\n    rainstorm[method] = proxyFn method for method in ['all', 'use', 'get', 'post', 'put', 'delete']\r\n    if not root\r\n      app.get '*', (req, res, next) ->\r\n        fullurl = req.hostname + req.url\r\n        rs = null\r\n        for key, subapp of apps\r\n          if new RegExp(key).test fullurl\r\n            req.url = key + fullurl.replace(key, '')\r\n            req.rs = subapp\r\n            break\r\n        req.rs = req.rs or apps['rsdefault']\r\n        next 'route'\r\n      @apps['rsdefault'] = rainstorm\r\n      port = config.port or process.env.PORT or 3000\r\n      server = http.createServer app\r\n      server.listen port, ->\r\n        console.log 'rainstorm started on port ' + port\r\n      rainstorm.server = server\r\n      if config.socket\r\n        config.socket rainstorm\r\n        socket = rainstorm.socket\r\n        socket.setup rainstorm\r\n    else\r\n      rainstorm.server = server\r\n      rainstorm.socket = socket\r\n      socket.setup rainstorm if socket\r\n      @apps[root] = rainstorm\r\n    rainstorm.get '/register-app', (req, res, next) ->\r\n      template = await fetchTemplate 'register-app.pug', req.rs.base\r\n      res.writeHead 200,\r\n        'Content-Type': 'text/html'\r\n      res.end pug.render template,\r\n        apps: apps\r\n    rainstorm.use '*', compression()\r\n    rainstorm.use '*', helmet()\r\n    rainstorm.use '*', bodyParser.json\r\n      limit: config.bodyParser or '50mb'\r\n    rainstorm"
  ]
}